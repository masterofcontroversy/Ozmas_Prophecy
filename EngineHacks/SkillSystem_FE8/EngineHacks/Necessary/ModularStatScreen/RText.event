  /*

  stat screen R menu is at 8a00b38
  find by breaking on key press while R menu open

  Each entry is 6 words
  Pointer 1 (up)
  POinter 2 (down)
  POinter 3 (left)
  Pointer 4 (right)
  x,y,Txtid
  Zero
  (Optional Pointer for alternate text routine)

  ST_Name:
  WORD 0
  POIN ST_Class
  WORD 0
  POIN ST_Luck
  BYTE 0x18
  BYTE 0x50
  SHORT 0
  WORD 0

  */

  //#include "EAstdlib.event"

  #include "RTextGetters/RTextGetters.event"

  #define RMenu(up,down,left,right,xcoord,ycoord,TID) "POIN up down left right;BYTE xcoord ycoord; SHORT TID; WORD 0 0;"
  #define RMenu(up,down,left,right,xcoord,ycoord,TID,Getter) "POIN up down left right; BYTE xcoord ycoord; SHORT TID; POIN 0 Getter|1"
  #define RMenu(up,down,left,right,xcoord,ycoord,SlotID,Looper,Getter) "POIN up down left right; BYTE xcoord ycoord; SHORT SlotID; POIN Looper|1 Getter|1"

  #define NameDescGetter 0x88bd5
  #define ClassDescGetter 0x88c01
  #define ConditionGetter 0x88a2d
  #define StrMagGetter 0x88b09

  #define MSSRightColumnX     166
  #define MSSMiddleColumnX    150
  #define MSSFarRightColumnX  190
  #define MSSLeftColumnX      102

RTextPage1:
{  
  PUSH // R menu
  ORG 0xa00b38
    ST_Name:
      RMenu(0,ST_Class,0,ST_Spd,0x18,0x50,0x0,NameDescGetter)
    ST_Class:
      RMenu(ST_Name,ST_Level,0,ST_Mov,0x6,0x68,0x6E8,ClassDescGetter)
    ST_Level:
      RMenu(ST_Class,ST_HP,0,ST_Exp,0x6,0x78,0x542)
    ST_Exp:
      RMenu(ST_Class,ST_HP,ST_Level,ST_Skills,0x26,0x78,0x543)
    ST_HP:
      RMenu(ST_Level,0,0,ST_Skill1,0x6,0x88,0x544)

    ST_Str:
      RMenu(PersonalDataRText,ST_Mag,ST_Name,ST_Def,MSSLeftColumnX,24,0x546,StrMagGetter)
    ST_Mag:
      RMenu(ST_Str,ST_Skl,ST_Name,ST_Res,MSSLeftColumnX,40,0x547)
    ST_Skl:
      RMenu(ST_Mag,ST_Spd,ST_Name,ST_Luck,MSSLeftColumnX,56,0x548)
    ST_Spd:
      RMenu(ST_Skl,ST_Mov,ST_Name,ST_Con,MSSLeftColumnX,72,0x549)
    ST_Luck:
      RMenu(ST_Res,ST_Con,ST_Skl,0,MSSRightColumnX,56,0x54a)
    ST_Def:
      RMenu(PersonalDataRText,ST_Res,ST_Str,0,MSSRightColumnX,24,0x54b)
    ST_Res:
      RMenu(ST_Def,ST_Luck,ST_Mag,0,MSSRightColumnX,40,0x54c)
    ST_Mov:
      RMenu(ST_Spd,ST_Skills,ST_Class,ST_Aid,MSSLeftColumnX,88,0x54d)

  POP

//the rest of these are here because space
ALIGN 4

ST_Con:
  RMenu(ST_Luck,ST_Aid,ST_Spd,0,MSSRightColumnX,72,0x54e,ConHPDescGetter)
ST_Aid:
  RMenu(ST_Con,ST_Cond,ST_Mov,0,MSSRightColumnX,88,0x54F)
ST_Cond:
  RMenu(ST_Aid,ST_Talk,ST_Skills,0,MSSRightColumnX,112,0x552,ConditionGetter)
ST_Talk:
  RMenu(ST_Cond,0,ST_Skill4,0,MSSRightColumnX,128,SS_TalkRText)

ST_Skills:
  RMenu(ST_Mov,ST_Skill1,ST_Exp,ST_Cond,MSSLeftColumnX,112,SS_SkillsRText)

ST_Skill1:
  RMenu(ST_Skills,0,ST_Exp,ST_Skill2,MSSLeftColumnX,128,0,RTextLoop,SkillDescGetter)
ST_Skill2:
  RMenu(ST_Skills,0,ST_Skill1,ST_Skill3,MSSLeftColumnX+16,128,1,RTextLoop,SkillDescGetter+4)
ST_Skill3:
  RMenu(ST_Skills,0,ST_Skill2,ST_Skill4,MSSLeftColumnX+32,128,2,RTextLoop,SkillDescGetter+8)
ST_Skill4:
  RMenu(ST_Skills,0,ST_Skill3,ST_Talk,MSSLeftColumnX+48,128,3,RTextLoop,SkillDescGetter+12)
//ST_Skill5:
//  RMenu(ST_Mov,0,ST_Skill4,ST_Skill6,182,24,4,RTextLoop,SkillDescGetter+16)
//ST_Skill6:
//  RMenu(ST_Mov,0,ST_Skill5,0,198,24,5,RTextLoop,SkillDescGetter+20)


#ifdef QOL_STAT_SCREEN_BALLISTA
    
    PUSH
        
        ORG 0x88A00
        replaceWithHack(ItemMenuRtextGetter)
        
        ORG 0x88B40
        replaceWithHack(ItemMenuRtextLooper)
        
    POP
    
    ALIGN 4
    #include "asm/ItemMenuRtext_BallistaFix.lyn.event"

#endif  // QOL_STAT_SCREEN_BALLISTA
#ifdef PRESS_SELECT_TO_VIEW_GROWTHS
  PersonalDataRText:
    RMenu(0,ST_Str,ST_Name,0,0x76,0x4,PersonalDataDesc1)
#else
  PersonalDataRText:
    RMenu(0,ST_Str,ST_Name,0,0x76,0x4,PersonalDataDesc2)
#endif
PUSH
  // Display an R-button text about pressing Select, since I can't seem to fit it nicely, and make that the default
  ORG $889D8
  POIN PersonalDataRText
POP
}


#ifdef ENABLE_PERSONAL_INFO

    RText_Page4:
  
  ST_Name4:
    RMenu(0,ST_Class4,0,ST_Dislikes,0x18,0x50,0x0,NameDescGetter)

  ST_Class4:
	#ifdef GAIDEN_MAGIC
	  RMenu(ST_Name4,ST_Level4,0,ST_Spell1,0x6,0x68,0x6E8,ClassDescGetter)
	#else
	  RMenu(ST_Name4,ST_Level4,0,0,0x6,0x68,0x6E8,ClassDescGetter)
	#endif

  ST_Level4:
    RMenu(ST_Class4,ST_HP4,0,ST_Exp4,0x6,0x78,0x542)

  ST_Exp4:
	#ifdef GAIDEN_MAGIC
      RMenu(ST_Class4,ST_HP4,ST_Level4,ST_Spell3,0x26,0x78,0x543)
    #else
	  RMenu(ST_Class4,ST_HP4,0,0,0x26,0x78,0x543)
	#endif

  ST_HP4:
	#ifdef GAIDEN_MAGIC
      RMenu(ST_Level4,0,0,ST_Spell5,0x6,0x88,0x544)
	#else
	  RMenu(ST_Level4,0,0,0,0x6,0x88,0x544)
	#endif

  ST_Likes:
    RMenu(0,ST_Dislikes,ST_Name4,ST_Height,0x66,0x18,LikesDesc)
	
  ST_Dislikes:
    RMenu(ST_Likes,ST_Age,ST_Name4,ST_Height,0x66,0x38,DislikesDesc)
	
  ST_Age:
	#ifdef GAIDEN_MAGIC
	  RMenu(ST_Dislikes,ST_Spell1,ST_Class4,ST_Height,0x66,0x58,AgeDesc)
	#else
	  RMenu(ST_Dislikes,0,ST_Class4,ST_Height,0x66,0x58,AgeDesc)
	#endif
	
  ST_Height:
	#ifdef GAIDEN_MAGIC
      RMenu(ST_Dislikes,ST_Spell2,ST_Age,0,0xa6,0x58,HeightDesc)
    #else
	  RMenu(ST_Dislikes,0,ST_Age,0,0xa6,0x58,HeightDesc)
	#endif

#else // ENABLE_PERSONAL_INFO

  RText_Page4:

  ST_Name4:
    RMenu(0,ST_Class4,0,ST_Donate,0x18,0x50,0x0,NameDescGetter)
    
  ST_Class4:
	#ifdef GAIDEN_MAGIC
	  RMenu(ST_Name4,ST_Level4,0,ST_Spell1,0x6,0x68,0x6E8,ClassDescGetter)
	#else
	  RMenu(ST_Name4,ST_Level4,0,ST_Donate,0x6,0x68,0x6E8,ClassDescGetter)
	#endif

  ST_Level4:
    RMenu(ST_Class4,ST_HP4,0,ST_Exp4,0x6,0x78,0x542)

  ST_Exp4:
	#ifdef GAIDEN_MAGIC
      RMenu(ST_Class4,ST_HP4,ST_Level4,ST_Spell3,0x26,0x78,0x543)
    #else
	  RMenu(ST_Class4,ST_HP4,ST_Level4,ST_Donate,0x26,0x78,0x543)
	#endif

  ST_HP4:
	#ifdef GAIDEN_MAGIC
      RMenu(ST_Level4,0,0,ST_Spell5,0x6,0x88,0x544)
	#else
	  RMenu(ST_Level4,0,0,ST_Donate,0x6,0x88,0x544)
	#endif
    
  ST_Donate:
	#ifdef GAIDEN_MAGIC
      RMenu(0,ST_Spell1,ST_Name4,0,0x86,0x48,DonateURL)
	#else
	  RMenu(0,0,ST_Name4,0,0x86,0x48,DonateURL)
	#endif
	
#endif // ENABLE_PERSONAL_INFO

#ifdef GAIDEN_MAGIC
  #ifdef ENABLE_PERSONAL_INFO
    ST_Spell1:
      RMenu(ST_Age,ST_Spell3,ST_Class4,ST_Spell2,0x66,0x68,0,GaidenRTextLooper,GaidenRTextGetter)
    ST_Spell2:
      RMenu(ST_Height,ST_Spell4,ST_Spell1,0,0xA6,0x68,1,GaidenRTextLooper,GaidenRTextGetter)
  #else
    ST_Spell1:
      RMenu(0,ST_Spell3,ST_Class4,ST_Spell2,0x66,0x68,0,GaidenRTextLooper,GaidenRTextGetter)
    ST_Spell2:
      RMenu(0,ST_Spell4,ST_Spell1,0,0xA6,0x68,1,GaidenRTextLooper,GaidenRTextGetter)
  #endif // ENABLE_PERSONAL_INFO
  ST_Spell3:
    RMenu(ST_Spell1,ST_Spell5,ST_Exp4,ST_Spell4,0x66,0x78,2,GaidenRTextLooper,GaidenRTextGetter)
  ST_Spell4:
    RMenu(ST_Spell2,ST_Spell6,ST_Spell3,0,0xA6,0x78,3,GaidenRTextLooper,GaidenRTextGetter)
  ST_Spell5:
    RMenu(ST_Spell3,0,ST_HP4,ST_Spell6,0x66,0x88,4,GaidenRTextLooper,GaidenRTextGetter)
  ST_Spell6:
    RMenu(ST_Spell4,0,ST_Spell5,0,0xA6,0x88,5,GaidenRTextLooper,GaidenRTextGetter)
	
#endif // GAIDEN_MAGIC

#define ItemMenuRTextLooperVanilla 0x88B40
#define ItemMenuRTextGetterVanilla 0x88A00

PUSH
ORG 0xA00DA0 //Vanilla page2 RText location

RTextPage2:
{
  ST_Item1:
    RMenu(0,ST_Item2,ST_Name,0,0x68,0x18,0,ItemMenuRTextLooperVanilla,ItemMenuRTextGetterVanilla)
  ST_Item2:
    RMenu(ST_Item1,ST_Item3,ST_Name,0,0x68,0x28,1,ItemMenuRTextLooperVanilla,ItemMenuRTextGetterVanilla)
  ST_Item3:
    RMenu(ST_Item2,ST_Item4,ST_Name,0,0x68,0x38,2,ItemMenuRTextLooperVanilla,ItemMenuRTextGetterVanilla)
  ST_Item4:
    RMenu(ST_Item3,ST_Item5,ST_Name,0,0x68,0x48,3,ItemMenuRTextLooperVanilla,ItemMenuRTextGetterVanilla)
  ST_Item5:
    RMenu(ST_Item4,ST_Atk,ST_Name,0,0x68,0x58,4,ItemMenuRTextLooperVanilla,ItemMenuRTextGetterVanilla)

POP
  ALIGN 4
  //LeftPage
  ST_Name:
    RMenu(0,ST_Class,0,ST_Item4,0x18,0x50,0x0,NameDescGetter)
  ST_Class:
    RMenu(ST_Name,ST_Level,0,ST_Atk,0x6,0x68,0x6E8,ClassDescGetter)
  ST_Level:
    RMenu(ST_Class,ST_HP,0,ST_Exp,0x6,0x78,0x542)
  ST_Exp:
    RMenu(ST_Class,ST_HP,ST_Level,ST_AS,0x26,0x78,0x543)
  ST_HP:
    RMenu(ST_Level,0,0,ST_Crit,0x6,0x88,0x544)

  //Left column
  ST_Atk:
    RMenu(ST_Item5,ST_AS,ST_Class,ST_Prt,MSSLeftColumnX,104,0x055C)
  ST_AS:
    RMenu(ST_Atk,ST_Crit,ST_Exp,ST_Rsl,MSSLeftColumnX,120,AttackSpeedDesc)
  ST_Crit:
    RMenu(ST_AS,0,ST_HP,ST_Rng,MSSLeftColumnX,136,0x055F)

  //Middle column
  ST_Prt:
    RMenu(ST_Item5,ST_Rsl,ST_Atk,ST_Hit,MSSMiddleColumnX,104,ProtectionDesc)
  ST_Rsl:
    RMenu(ST_Prt,ST_Crit,ST_AS,ST_Avo,MSSMiddleColumnX,120,ResilienceDesc)

  //Right column
  ST_Hit:
    RMenu(ST_Item5,ST_Avo,ST_Prt,0,MSSFarRightColumnX,104,0x055D)
  ST_Avo:
    RMenu(ST_Hit,ST_Rng,ST_Rsl,0,MSSFarRightColumnX,120,0x0560)
  ST_Rng:
    RMenu(ST_Avo,0,ST_Crit,0,MSSFarRightColumnX,136,0x055E)
}
